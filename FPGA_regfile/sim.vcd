$date
	Thu Mar 13 20:03:29 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module mainTB $end
$var wire 7 ! out_debug [6:0] $end
$var wire 7 " out [6:0] $end
$var wire 32 # ep41trigin [31:0] $end
$var wire 32 $ ep20wireout [31:0] $end
$var parameter 32 % mem_size $end
$var reg 32 & Cycle_count [31:0] $end
$var reg 1 ' clk $end
$var reg 7 ( data [6:0] $end
$var reg 7 ) in [6:0] $end
$var reg 1 * reset $end
$var reg 7 + wr_addr [6:0] $end
$var reg 1 , write_enable $end
$scope module dut $end
$var wire 1 ' clk $end
$var wire 32 - ep41trigin [31:0] $end
$var wire 1 . write_enable $end
$var wire 7 / wr_addr [6:0] $end
$var wire 1 0 reset $end
$var wire 7 1 out_debug [6:0] $end
$var wire 7 2 out [6:0] $end
$var wire 7 3 in [6:0] $end
$var wire 32 4 ep20wireout [31:0] $end
$var wire 7 5 data [6:0] $end
$var parameter 32 6 mem_size $end
$scope module uut $end
$var wire 1 ' clk $end
$var wire 7 7 data [6:0] $end
$var wire 7 8 in [6:0] $end
$var wire 1 0 reset $end
$var wire 7 9 wr_addr [6:0] $end
$var wire 1 . write_enable $end
$var wire 7 : out_debug [6:0] $end
$var wire 7 ; out [6:0] $end
$var reg 7 < out_debug_r [6:0] $end
$var reg 7 = out_r [6:0] $end
$var integer 32 > j [31:0] $end
$var integer 32 ? k [31:0] $end
$upscope $end
$upscope $end
$scope begin init $end
$var integer 32 @ vcdlevel [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000000000000 6
b1000000000000 %
$end
#0
$dumpvars
b100 @
bx ?
b10000000 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 5
b0 4
b0 3
b0 2
b0 1
10
b0 /
0.
b10000000 -
0,
b0 +
1*
b0 )
b0 (
0'
bx &
b0 $
b10000000 #
b0 "
b0 !
$end
#5000
b0 &
b10000000 ?
1'
#10000
0'
#15000
b10000000 ?
1'
#20000
0'
#25000
b10000000 ?
1'
#30000
0'
#35000
b10000000 ?
1'
#40000
0'
#45000
b10000000 ?
1'
#50000
0'
#55000
b10000000 ?
1'
#60000
0'
#65000
b10000000 ?
1'
#70000
0'
#75000
b1 &
00
b0 #
b0 -
0*
b10000000 ?
1'
#80000
0'
#85000
b10 &
1'
#90000
0'
#95000
b11 &
1'
#100000
0'
#105000
b100 &
b1 5
b1 7
b1 /
b1 9
1.
b1 (
b1 +
b1000000100000001 #
b1000000100000001 -
1,
1'
#110000
0'
#115000
b101 &
b0 5
b0 7
b0 /
b0 9
0.
b0 (
b0 +
b0 #
b0 -
0,
1'
#120000
0'
#125000
b110 &
1'
#130000
0'
#135000
b111 &
1'
#140000
0'
#145000
b1000 &
1'
#150000
0'
#155000
b1001 &
1'
#160000
0'
#165000
b1010 &
1'
#170000
0'
#175000
b1011 &
1'
#180000
0'
#185000
b1100 &
1'
#190000
0'
#195000
b1 !
b1 $
b1 4
b1 1
b1 :
b1 <
b1101 &
b1 /
b1 9
b100000000 #
b100000000 -
b1 +
1'
#200000
0'
#205000
b1110 &
1'
#210000
0'
#215000
b1111 &
1'
#220000
0'
#225000
b10000 &
1'
#230000
0'
#235000
b10001 &
1'
#240000
0'
#245000
b10010 &
1'
